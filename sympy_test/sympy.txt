from sympy import *

def replace_all_pow(expression):
    expression = expression.replace(" ", "")
    while "pow" in expression:
        print(expression)
        index_of_pow = expression.find("pow")
        first_index = expression.find("(", index_of_pow)
        last_index = expression.find(")", first_index)
        # print("index of pow: {}, (: {}, ): {})".format(index_of_pow, first_index, last_index))

        var = expression[first_index + 1]
        exponent = int(expression[first_index + 3:last_index])
        multiplication_string = var
        for i in range(exponent-1):
            multiplication_string += "*{}".format(var)
        parentheses = expression[first_index:last_index+1]
        # print(parentheses)
        expression = expression.replace(parentheses, multiplication_string)
        expression = expression.replace("pow", "", 1)
        # print(expression)
    return expression

if __name__ == '__main__': 
    vars_list = %s
    %s = symbols(%s)
    func = %s
    for var in vars_list:
        der = ccode(simplify(diff(function, eval(var))))
        output = replace_all_pow(der)
        print(output)